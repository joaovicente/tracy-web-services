<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.apm4all.tracy</groupId>
  <artifactId>tracy-web-services</artifactId>
  <version>0.1.0</version>

  <name>Tracy Web Services</name>
  <description>Project delivering Tracy web services</description>
  <url>http://www.apm4all.com</url>

  <packaging>war</packaging>

  <properties>
    <swagger-ui.version>2.1.2</swagger-ui.version>
    <logback-version>1.1.3</logback-version>
    <swagger.url>https://github.com/swagger-api/swagger-ui/archive</swagger.url>
    <destDir>target/swagger-ui</destDir>
  </properties>

  <dependencies>

    <!-- Tracy Dependencies -->
  	<dependency>
  		<groupId>com.apm4all.tracy</groupId>
  		<artifactId>Tracy</artifactId>
  		<version>3.1.0</version>
  	</dependency>

    <!-- Camel Dependencies -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>2.16.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>2.16.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-servlet</artifactId>
      <version>2.16.1</version>
    </dependency>
    
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-quartz</artifactId>
      <version>2.16.1</version>
    </dependency>

    <!-- swagger api -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-swagger-java</artifactId>
      <version>2.16.1</version>
    </dependency>

    <!-- use for json binding -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jackson</artifactId>
      <version>2.16.1</version>
    </dependency>

    <!-- we need spring web -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>4.1.8.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-elasticsearch</artifactId>
      <version>2.16.1</version>
    </dependency>

    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-http4</artifactId>
      <version>2.15.1</version>
    </dependency>

    <!-- Time utility -->
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.7</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.12</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.1.3</version>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring</artifactId>
      <version>2.15.1</version>
      <scope>test</scope>
    </dependency>
      <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.databene</groupId>
      <artifactId>contiperf</artifactId>
      <version>2.2.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.apm4all.tracy</groupId>
      <artifactId>tracy-publisher</artifactId>
      <version>0.0-alpha</version>
    </dependency>
  </dependencies>

  <build>
    <finalName>tws</finalName>
	<plugins>
 		<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-compiler-plugin</artifactId>
			<configuration>
				<source>1.7</source>
				<target>1.7</target>
			</configuration>
		</plugin>
<!-- Step 1. - Download Swagger UI project from GitHub -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>wagon-maven-plugin</artifactId>
        <version>1.0</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>download-single</goal>
            </goals>
            <configuration>
              <url>${swagger.url}</url>
              <fromFile>v${swagger-ui.version}.tar.gz</fromFile>
              <toFile>${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz</toFile>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 2. -  Decompress content and move it to target/swagger-ui folder -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.6</version>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <target>
                <echo message="Decompress archive" />
                <gunzip src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz" />
                <untar src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar" dest="${project.build.directory}" />
                <echo message="moving resources" />
                <move todir="${destDir}" overwrite="yes">
                  <fileset dir="${project.build.directory}/swagger-ui-${swagger-ui.version}/dist" />
                </move>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 3. Copy Web Resources to target/classes but also to target/swagger-ui -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/classes/</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/webapp</directory>
                  <filtering>false</filtering>
                </resource>
                <!-- Copy swagger-ui resources to classes directory to be able to use it with mvn jetty:run -->
                <resource>
                  <directory>${destDir}</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Step 4. Add Swagger-ui Resources to the WAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <webResources>
            <resource>
              <directory>target/swagger-ui/</directory>
              <includes>
                <include>**/*.*</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <!-- allows running this example with mvn:jetty-run -->
      <plugin>
        <groupId>org.eclipse.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>9.2.11.v20150529</version>
        <configuration>
          <httpConnector>
            <port>8080</port>
          </httpConnector>
          <webAppSourceDirectory>target/classes</webAppSourceDirectory>
          <webApp>
            <contextPath>/tws</contextPath>
          </webApp>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
