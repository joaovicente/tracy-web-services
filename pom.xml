<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.apm4all.tracy</groupId>
  <artifactId>tracy-web-services</artifactId>
  <version>0.0-alpha</version>

  <name>Tracy Web Services</name>
  <description>Project delivering multi node Tracy storage, retrieval and statistics</description>
  <url>http://www.apm4all.com</url>

  <packaging>war</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <swagger-ui.version>2.0.24</swagger-ui.version>
    <logback-version>1.1.2</logback-version>
    <swagger.url>https://github.com/swagger-api/swagger-ui/archive/v${swagger-ui.version}</swagger.url>
    <destDir>target/swagger-ui</destDir>
  </properties>

  <dependencies>

    <!-- Camel Dependencies -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <version>2.15.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <version>2.15.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-stream</artifactId>
      <version>2.15.1</version>
    </dependency>
 	<dependency>
		<groupId>org.apache.camel</groupId>
		<artifactId>camel-servlet</artifactId>
      	<version>2.15.1</version>
	</dependency>
	<dependency>
		<groupId>org.apache.camel</groupId>
		<artifactId>camel-metrics</artifactId>
      	<version>2.15.1</version>
	</dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-restlet</artifactId>
      <version>2.15.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jackson</artifactId>
      <version>2.15.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-elasticsearch</artifactId>
      <version>2.15.1</version>
    </dependency>

	<!-- swagger api -->
	<dependency>
		<groupId>org.apache.camel</groupId>
		<artifactId>camel-swagger</artifactId>
      	<version>2.15.1</version>
	</dependency>

    <!-- Spring Web -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-web</artifactId>
      <version>4.1.5.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.7</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>1.7.10</version>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>1.2.17</version>
    </dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-classic</artifactId>
		<version>${logback-version}</version>
	</dependency>
	<dependency>
		<groupId>ch.qos.logback</groupId>
		<artifactId>logback-core</artifactId>
		<version>${logback-version}</version>
	</dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-test-spring</artifactId>
      <version>2.15.1</version>
      <scope>test</scope>
    </dependency>
  	<dependency>
	  <groupId>junit</groupId>
	  <artifactId>junit</artifactId>
	  <version>4.11</version>
	  <scope>test</scope>
	</dependency>
	<dependency>
	  <groupId>org.databene</groupId>
	  <artifactId>contiperf</artifactId>
	  <version>2.2.0</version>
	  <scope>test</scope>
	</dependency>
    <dependency>
      <groupId>com.apm4all.tracy</groupId>
      <artifactId>tracy-publisher</artifactId>
      <version>0.0-alpha</version>
    </dependency>
    <dependency>
      <groupId>com.apm4all.tracy</groupId>
	  <artifactId>Tracy</artifactId>
	  <version>3.1.0</version>
	  <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
  <finalName>tws</finalName>
	<defaultGoal>install</defaultGoal>

	<plugins>
	<!-- Step 1. - Download Swagger UI project from GitHub -->
<!-- 	<plugin>
		<groupId>org.codehaus.mojo</groupId>
		<artifactId>wagon-maven-plugin</artifactId>
		<version>1.0</version>
		<executions>
			<execution>
				<phase>process-resources</phase>
				<goals>
					<goal>download-single</goal>
				</goals>
				<configuration>
					<url>${swagger.url}</url>
					<fromFile>v${swagger-ui.version}.tar.gz</fromFile>
					<toFile>${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz</toFile>
				</configuration>
			</execution>
		</executions>
	</plugin> -->

	<!-- Step 2. - Decompress content and move it to target/swagger-ui folder -->
<!-- 	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-antrun-plugin</artifactId>
		<executions>
			<execution>
				<phase>process-resources</phase>
				<goals>
					<goal>run</goal>
				</goals>
				<configuration>
					<target>
						<echo message="Decompress archive" />
						<gunzip
							src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz" />
						<untar
							src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar"
							dest="${project.build.directory}" />
						<echo message="moving resources" />
						<move todir="${destDir}" overwrite="yes">
							<fileset
								dir="${project.build.directory}/swagger-ui-${swagger-ui.version}/dist" />
						</move>
					</target>
				</configuration>
			</execution>
		</executions>
	</plugin> -->

	<!-- Step 3. Copy Web Resources to target/classes but also to target/swagger-ui -->
<!-- 	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-resources-plugin</artifactId>
		<executions>
			<execution>
				<id>copy-resources</id>
				<phase>generate-resources</phase>
				<goals>
					<goal>copy-resources</goal>
				</goals>
				<configuration>
					<outputDirectory>${basedir}/target/classes/</outputDirectory>
					<resources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>false</filtering>
						</resource>
						Copy swagger-ui resources to classes directory to be able to use 
							it with mvn jetty:run
						<resource>
							<directory>${destDir}</directory>
							<filtering>false</filtering>
						</resource>
					</resources>
				</configuration>
			</execution>
		</executions>
	</plugin> -->

	<!-- Step 4. Add Swagger-ui Resources to the WAR -->
<!-- 	<plugin>
		<groupId>org.apache.maven.plugins</groupId>
		<artifactId>maven-war-plugin</artifactId>
		<configuration>
			<webResources>
				<resource>
					<directory>target/swagger-ui/</directory>
					<includes>
						<include>**/*.*</include>
					</includes>
				</resource>
			</webResources>
		</configuration>
	</plugin> -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.5.1</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- plugin so you can run mvn jetty:run -->
      <plugin>
        <groupId>org.mortbay.jetty</groupId>
        <artifactId>jetty-maven-plugin</artifactId>
        <version>8.1.16.v20140903</version>
        <configuration>
          <webAppConfig>
            <contextPath>/tws</contextPath>
          </webAppConfig>
          <systemProperties>
            <!-- enable easy JMX connection to JConsole -->
            <systemProperty>
              <name>com.sun.management.jmxremote</name>
              <value/>
            </systemProperty>
          </systemProperties>
          <scanIntervalSeconds>10</scanIntervalSeconds>
        </configuration>
      </plugin>

      <!-- plugin to deploy to JBoss AS with: mvn jboss-as:deploy (you can also do redeploy/undeploy) -->
      <plugin>
        <groupId>org.jboss.as.plugins</groupId>
        <artifactId>jboss-as-maven-plugin</artifactId>
        <version>7.4.Final</version>
      </plugin>

    </plugins>
  </build>

</project>
